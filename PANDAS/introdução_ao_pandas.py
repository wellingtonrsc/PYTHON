# -*- coding: utf-8 -*-
"""Introdução ao Pandas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L7VJwz9-d9FW2uljDLMDF2XaQWzSqstu

# pandas - "A melhor biblioteca do Python para Dados"

- Quase sempre que você for trabalhar com dados no Python você vai usar o pandas, então é importante você saber trabalhar com essa biblioteca muito bem

- Vamos aprender os principais comandos e os princípios básicos do pandas

- Faça o download do Gabarito desse arquivo e use como uma cartilha de consulta (Link na descrição)

### Importando o pandas
"""

import pandas as pd

"""### Criando um dataframe a partir de um dicionário"""

# dataframe = pd.DataFrame()
venda = {'data': ['15/02/2021', '16/02/2021'],
         'valor': [500, 300],
         'produto': ['feijao', 'arroz'],
         'qtde': [50, 70],
        }
vendas_df = pd.DataFrame(venda)

"""### Visualização dos Dados
    - print
    - display
"""

display(vendas_df)

"""### Importando arquivos e bases de dados"""

vendas_df = pd.read_excel("Vendas.xlsx")
display(vendas_df)

"""### Resumos de Visualização de Dados simples e úteis
    - head
    - shape
    - describe
"""

display(vendas_df.head(10))
print(vendas_df.shape)
display(vendas_df.describe())

"""### Pegar 1 coluna (e os pd.Series)"""

produtos = vendas_df[['Produto', 'ID Loja']]
display(produtos)

"""### .loc, um método muito importante
    - Pegar 1 linha
    - Pegar linhas de acordo com alguma condição
    - Pegar linhas e colunas específicas
    - Pegar 1 valor específico
"""

# pegar uma linha
display(vendas_df.loc[1:5])

# pegar linhas que correspondem a uma condição
vendas_norteshopping_df = vendas_df.loc[vendas_df['ID Loja'] == 'Norte Shopping']

# pegar várias linhas e colunas usando o loc
vendas_norteshopping_df = vendas_df.loc[vendas_df['ID Loja'] == 'Norte Shopping', ["ID Loja", "Produto", "Quantidade"]]
display(vendas_norteshopping_df)

# pegar 1 valor específico
print(vendas_df.loc[1, 'Produto'])

"""### Adicionar 1 coluna"""

# a partir de uma coluna que existe
vendas_df['Comissão'] = vendas_df['Valor Final'] * 0.05
# display(vendas_df)

# criar uma coluna com valor padrão
vendas_df.loc[:, "Imposto"] = 0
display(vendas_df)

"""### Adicionar 1 linha
    - Linhas de um complemento da base de dados
"""

vendas_dez_df = pd.read_excel("Vendas - Dez.xlsx")
#display(vendas_dez_df)

vendas_df = vendas_df.append(vendas_dez_df)
display(vendas_df)

"""### Excluir linhas e colunas"""

vendas_df = vendas_df.drop(0, axis=0)
display(vendas_df)

"""### Valores Vazios
    - Deletar linhas/colunas vazias
    - Deletar linhas que possuem valores vazios
    - Preencher valores vazios (média e último valor)
"""

# deletar linhas e colunas completamente vazias
#vendas_df = vendas_df.dropna(how='all', axis=1)

# deletar linhas que possuem pelo menos 1 valor vazio
#vendas_df = vendas_df.dropna()

# preencher valores vazios
# preencher com a média da coluna
vendas_df['Comissão'] = vendas_df['Comissão'].fillna(vendas_df['Comissão'].mean())
display(vendas_df)

# preencher com o último valor
vendas_df = vendas_df.ffill()

"""### Calcular Indicadores
    - Groupby
    - Value Counts
"""

# value counts
transacoes_loja = vendas_df['ID Loja'].value_counts()
display(transacoes_loja)

# group by
faturamento_produto = vendas_df[['Produto', 'Valor Final']].groupby('Produto').sum()
display(faturamento_produto)

"""### Mesclar 2 dataframes (Procurar informações de um dataframe em outro)"""

gerentes_df = pd.read_excel("Gerentes.xlsx")
# display(gerentes_df)

vendas_df = vendas_df.merge(gerentes_df)
display(vendas_df)

"""### Como continuar aprendendo?

### Minicurso Gratuito de Análise de Dados com Python na Descrição
"""